{"version":3,"sources":["components/Tree/tree.js","components/Navbar.js","components/NavbarUser.js","axios.js","components/Users.js","components/Groups.js","App.js","reportWebVitals.js","index.js"],"names":["Tree","data","className","map","tree","node","TreeNode","useState","childVisible","setChildVisiblity","hasChild","children","style","cursor","onClick","e","v","icon","label","Navbar","handleShow","treeShow","exact","to","type","NavbarUser","instance","axios","create","baseURL","Users","users","setUser","departments","setDepartments","lastName","setLastname","firstName","setFirstname","jobTitle","setJobtitle","department","setNewdepartment","id","setId","show","setShow","edit","setEdit","editClose","handleClose","useEffect","get","then","response","console","log","takedata","i","length","scope","user","index","display","Button","Modal","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","placeholder","onChange","event","target","value","as","name","Footer","variant","post","defaultValue","put","arrayToTree","require","Groups","groups","setGroups","pdepartment","setPrimarydepartment","checkname","setCheckname","lastid","setLastid","lastdepartment","setLastdepartment","checkdepartment","setCheckdepartment","move","setMove","moveClose","save","setSave","saveClose","details","setDetails","detailsClose","showtree","setShowtree","treeClose","treedata","treedata1","group","push","parent","Array","prototype","apply","parentProperty","customID","idd","takedetails","takedepartment","changename","Object","assign","filter","marginLeft","fontWeight","fontSize","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d94b9ac.chunk.js","sourcesContent":["import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport * as Icons from \"@fortawesome/fontawesome-free-solid\"\nimport React, { useState } from \"react\";\nimport \"./tree.css\";\n\nconst Tree = ({ data = [] }) => {\n  return (\n    <div className=\"d-tree\">\n      <ul className=\"d-flex d-tree-container flex-column\">\n        {data.map((tree) => (\n          <TreeNode node={tree} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst TreeNode = ({ node }) => {\n  const [childVisible, setChildVisiblity] = useState(false);\n\n  const hasChild = node.children ? true : false;\n\n  return (\n    <li className=\"d-tree-node border-0\">\n      <div className=\"d-flex\" style = {{cursor:'pointer'}} onClick={(e) => setChildVisiblity((v) => !v)}>\n        {hasChild && (\n          <div \n            className={`d-inline d-tree-toggler ${\n              childVisible ? \"active\" : \"\"\n            }`}\n          >\n            <FontAwesomeIcon icon=\"caret-right\" />\n          </div>\n        )}\n\n        <div className=\"col d-tree-head\">\n          <i className={`mr-1 ${node.icon}`}> </i>\n          {node.label}\n        </div>\n      </div>\n\n      {hasChild && childVisible && (\n        <div className=\"d-tree-content\">\n          <ul className=\"d-flex d-tree-container flex-column\">\n            <Tree data={node.children} />\n          </ul>\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default Tree;","import React, {useState} from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/button'\nimport Tree from './Tree/tree'\n\n\nconst Navbar = ( {handleShow, treeShow} ) => {\n\n\n  \n  return (\n    <div>\n         <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <div className=\"container\">\n       \n     \n\n        <div >\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" exact to=\"/\">\n                Users\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" exact to=\"/Departments\">\n                Departments\n              </NavLink>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" type  = \"button\" onClick = {treeShow}>\n                Tree\n              </Link>\n            </li>\n\n          </ul>\n        </div>\n\n        <Link className=\"btn btn-outline-light\" onClick={handleShow}>Add Department </Link>\n       \n\n      </div>\n    </nav>\n\n    \n\n\n\n    </div>\n   \n  );\n};\n\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\nimport { Link , NavLink} from \"react-router-dom\";\n\n\n\n\n\nconst NavbarUser = ( {handleShow}) => {\n\n \n\n \n  return (\n    <div>\n\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <div className=\"container\">\n       \n  \n\n        <div >\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" exact to=\"/\">\n                Users\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" exact to=\"/Departments\" >\n                Departments\n              </Link>\n            </li>\n\n          \n\n          </ul>\n        </div>\n        <Link className=\"btn btn-outline-light\" onClick={handleShow} >Add User</Link>\n        \n      </div>\n    </nav>\n\n\n\n    \n    </div>\n  \n\n\n      \n\n    \n  );\n};\n\nexport default NavbarUser;","import axios from 'axios'\n\nconst instance = axios.create ({\n        baseURL: 'https://dir-backend.herokuapp.com',\n})\n\nexport default instance","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavbarUser from './NavbarUser'\nimport axios from '../axios'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/button'\n\n\nconst Users = () => {\n\n    const [users, setUser] = useState([]);\n    const [departments, setDepartments] = useState ([]);\n    \n\n    const [lastName, setLastname] = useState('');\n    const [firstName, setFirstname] = useState('');\n    const [jobTitle, setJobtitle] = useState('');\n    const [department, setNewdepartment] = useState('');\n    const [id, setId] = useState(0);\n\n    const [show, setShow] = useState(false);\n    const [edit,setEdit] =useState(false);\n\n    const editClose = () => setEdit(false);\n    const editShow = () => setEdit(true);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n  \n\n        useEffect ( () => {\n            axios.get(\"/\")\n            .then ( (response) =>{\n                console.log(\"success\");\n                setUser(response.data);\n            });\n\n        }, []);\n\n\n\n        useEffect ( () => {\n            axios.get(\"/Departments\")\n            .then ( (response) =>{\n                console.log(\"success\");\n                setDepartments(response.data);\n            });\n\n        }, []);\n       \n        const adduser = () =>  {\n            axios.post('/create', {\n                lastName: lastName,\n                firstName:firstName,\n                jobTitle: jobTitle,\n                department:department,\n\n            }).then (() => {\n                setUser( [...users, {\n                 id:users.length+1,\n                 lastName: lastName,\n                 firstName:firstName,\n                 jobTitle: jobTitle,\n                 department:department,\n                }])\n            });\n\n            setShow(false);\n            \n        };\n\n\n\n\n        const takedata = (id) =>{\n            editShow(true);\n            for ( var i=0; i<users.length;i++){\n                if (users[i].id == id){\n               \n                    setLastname (users[i].lastName);\n                    setFirstname (users[i].firstName);\n                    setJobtitle (users[i].jobTitle);\n                    setNewdepartment(users[i].department);\n                    setId(users[i].id);\n                }\n            }\n            \n        }\n\n        const edituser = () =>{\n\n\n            axios.put('/update', {\n                lastName: lastName,\n                firstName:firstName,\n                jobTitle: jobTitle,\n                department:department,\n                id:id,\n\n            }).then (() => {\n                setUser(users.map ((user) => {\n                    return user.id == id ? {\n                        lastName: lastName,\n                        firstName:firstName,\n                        jobTitle: jobTitle,\n                        department:department,\n                        id:id,\n                    } : user;\n                }))\n            });\n\n            setEdit(false);\n        }\n\n    \n   \n  return (\n\n    <div>\n\n<NavbarUser handleShow = {handleShow} />\n    <div className=\"container\">\n\n   \n       \n      <div className=\"py-4\">\n        <h1>Users</h1>\n        <table className=\"table border shadow\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">First Name</th>\n              <th scope=\"col\">Job Title</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user, index) => (\n              <tr>\n                  <th style = {{display:'none'}}scope=\"row\">{user.id}</th>\n                <td>{user.lastName}</td>\n                <td>{user.firstName}</td>\n                <td>{user.jobTitle}</td>\n                <td>\n                \n                  <Button\n                    className=\"btn btn-outline\"\n                    onClick = {() => takedata(user.id)}\n                  >\n                    Edit\n                  </Button>\n\n\n\n                \n                </td>\n              </tr>\n            ))}\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n\n\n    <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>ADD USER</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group >\n              <Form.Label>Last Name </Form.Label>\n              <Form.Control  placeholder=\"Last Name\" type=\"text\"  onChange = {(event) => { setLastname(event.target.value)}}/>     \n\n              </Form.Group>\n\n              <Form.Group>\n              <Form.Label>First Name </Form.Label>\n              <Form.Control  type=\"text\" placeholder=\"First Name\" onChange = {(event) => { setFirstname(event.target.value)}}/>   \n\n              </Form.Group>\n        \n                <Form.Group>\n\n                <Form.Label>Job Title </Form.Label>\n                <Form.Control  placeholder=\"Job Title\" type=\"text\" onChange = {(event) => { setJobtitle(event.target.value)}}/>   \n\n                </Form.Group>\n\n                <Form.Group>\n                <Form.Label>Department </Form.Label>\n                <Form.Control as=\"select\" onChange = {(event) => { setNewdepartment(event.target.value)}}>\n                   <option>Department</option>\n                {departments.map ((department) => (\n                    <option>{department.name}</option>\n                ))}\n                 </Form.Control>\n                \n                \n                </Form.Group>\n           \n         \n\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={adduser}>\n            Add User\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n\n\n      <Modal show={edit} onHide={editClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>EDIT USER</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group >\n              <Form.Label>Last Name </Form.Label>\n              <Form.Control  value = {lastName} type=\"text\" placeholder=\"Last Name\"  onChange = {(event) => { setLastname(event.target.value)}}/>     \n\n              </Form.Group>\n\n              <Form.Group>\n              <Form.Label>First Name </Form.Label>\n              <Form.Control  type=\"text\" value = {firstName} placeholder=\"First Name\" onChange = {(event) => { setFirstname(event.target.value)}}/>   \n\n              </Form.Group>\n        \n                <Form.Group>\n\n                <Form.Label>Job Title </Form.Label>\n                <Form.Control  type=\"text\" value = {jobTitle} placeholder=\"Job Title\" onChange = {(event) => { setJobtitle(event.target.value)}}/>   \n\n                </Form.Group>\n\n                <Form.Group>\n                <Form.Label>Department </Form.Label>\n                <Form.Control as=\"select\"   defaultValue = {department} onChange = {(event) => { setNewdepartment(event.target.value)}}>\n                \n                {departments.map ((department) => (\n                    <option>{department.name}</option>\n                ))}\n                 </Form.Control>\n                \n                \n                </Form.Group>\n           \n         \n\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={editClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={edituser}>\n            Edit User\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n    </div>\n  );\n};\n\nexport default Users;","import React, { useState, useEffect } from \"react\";\nimport Navbar from './Navbar'\nimport axios from '../axios'\nimport Tree from './Tree/tree'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/button'\n\n\nvar arrayToTree = require('array-to-tree');\n\n\nconst Groups = () => {\n\n    const [groups, setGroups] = useState([]);\n    const [users, setUser] = useState([]);\n\n    const [name, setNewdepartment] = useState ('');\n    const [pdepartment, setPrimarydepartment] = useState('');\n    const [id,setId] = useState(0);\n    const [checkname, setCheckname] = useState('');\n\n    const [lastid, setLastid] = useState(0);\n    const [lastdepartment, setLastdepartment] = useState('');\n    const [checkdepartment, setCheckdepartment] = useState('');\n   \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [edit,setEdit] =useState(false);\n    const editClose = () => setEdit(false);\n    const editShow = () => setEdit(true);\n\n\n    const [move,setMove] =useState(false);\n    const moveClose = () => setMove(false);\n    const moveShow = () => setMove(true);\n\n    const [save,setSave] =useState(false);\n    const saveClose = () => setSave(false);\n    const saveShow = () => setSave(true);\n\n    const [details, setDetails] = useState (false);\n    const detailsClose = () => setDetails(false);\n    const detailsShow = () => setDetails(true);\n\n    const [showtree, setShowtree] = useState(false);\n    const treeClose = () => setShowtree(false);\n    \n    const treedata =[];\n    const treedata1 = [];\n   \n \n    treedata.length = 0;\n       groups.map (group => {\n         treedata.push ({id :group.name, label:group.name,  parent: group.pdepartment});\n       });\n \n       Array.prototype.push.apply(treedata1, arrayToTree(treedata, {\n         parentProperty: 'parent',\n         customID: 'id'\n       }) );\n    \n  \n    \n\n\n    useEffect ( () => {\n        axios.get(\"/\")\n        .then ( (response) =>{\n            console.log(\"success\");\n            setUser(response.data);\n        });\n\n    }, []);\n\n    useEffect ( () => {\n        axios.get(\"/Departments\")\n        .then ( (response) =>{\n            console.log(\"success\");\n            setGroups(response.data);\n        });\n\n    }, []);\n\n\n    const addDepartment = () =>  {\n        axios.post('/createdepartment', {\n            \n            name:name,\n            pdepartment:pdepartment,\n        }).then ( () => {\n            setGroups( [...groups, {\n                id:groups.length+1,\n                name:name,\n                pdepartment:pdepartment,\n               }])\n        });\n\n        setShow(false);\n        \n    };\n\n    \n    const takedata = (id) =>{\n        editShow(true);\n        for ( var i=0; i<groups.length;i++){\n            if (groups[i].idd == id){\n                setCheckname(groups[i].name)\n                setNewdepartment (groups[i].name);\n                setId(groups[i].idd);\n                setPrimarydepartment(groups[i].pdepartment);\n            }\n        }\n        \n    }\n\n    const takedetails = (id) =>{\n        detailsShow(true);\n        for ( var i=0; i<groups.length;i++){\n            if (groups[i].idd == id){\n                setNewdepartment (groups[i].name);\n                setId(groups[i].idd);\n                setPrimarydepartment(groups[i].pdepartment);\n            }\n        }\n        \n    }\n\n    const takedepartment = (id) =>{\n        moveShow(true);\n        for ( var i=0; i<groups.length;i++){\n            if (groups[i].idd == id){\n                setNewdepartment (groups[i].name);\n                setId(groups[i].idd);\n                setPrimarydepartment(groups[i].pdepartment);\n            }\n        }\n        \n    }\n\n    const editNamedepartment = () => {\n        const changename = checkname;\n\n        axios.put('/updatedepartment', {\n            checkname:checkname,\n            name:name,\n            id:id,\n\n        }).then (() => {\n            setGroups(groups.map ((group) => {\n                return group.idd == id ? Object.assign( {}, group, {name:name}) \n                : group.pdepartment == changename ? Object.assign( {}, group, {pdepartment:name})\n                : group;\n            }))\n\n\n            setUser(users.map ((user) => {\n                return user.department == changename? Object.assign( {}, user, {department:name}) : user;\n            }))\n\n       \n\n        });\n\n     \n\n        setEdit(false);\n\n    }\n\n \n\n    \n\n    const movedepartment = () => {\n     \n      \n        groups.filter(group => group.idd == id).map(group => (\n            setLastdepartment(group.pdepartment)\n        ));\n        groups.filter(group => group.name == pdepartment).map(group => (\n            setLastid(group.idd)\n        ));\n\n\n        groups.filter(group => group.name == pdepartment).map(group => (\n            setCheckdepartment (group.pdepartment)\n        ));\n\n       \n        \n\n        setMove(false);\n        setSave(true);\n\n    }\n\n    \n    \n    const movedepartmentfinal = () => {\n        console.log (pdepartment + \" \"+ id + \" \" + lastdepartment + \" \" + lastid + \" \"+ checkdepartment);\n\n        \n\n        axios.put('/movedepartment', {\n            pdepartment:pdepartment,\n            id:id,\n            lastdepartment:lastdepartment,\n            lastid,\n           \n\n        }).then (() => {\n            setGroups(groups.map ((group) => {\n                return group.idd == id ? {\n                    idd:id,\n                    pdepartment:pdepartment,\n                    name:name,\n\n                }  : group\n            }))\n        });\n\n        setSave(false);\n    }\n   \n    \n    const detailsshow = () => {\n        setDetails(true);\n    };\n\n\n  \n\n    const treeShow = () => {\n         \n      setShowtree(true)\n      console.log(treedata1);\n    \n\n    };\n\n   \n    \n  \n\n \n\n  \n\n\n  \n  return (\n      \n\n    <div>\n        \n<Navbar handleShow = {handleShow} treeShow = {treeShow}/>\n\n    \n    <div className=\"container\">\n       \n      <div className=\"py-4\">\n        <h1>Departments</h1>\n        <table className=\"table border shadow\">\n          <thead className=\"thead-dark\">\n            <tr>\n\n              <th scope=\"col\">Department Name</th>\n              \n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {groups.map((group, index) => (\n              <tr>\n                <td>{group.name}</td>\n              \n                <td>\n                  <Button className=\"btn btn-primary mr-2\" \n                   onClick = {() => takedetails(group.idd)}>\n                    Details\n                    \n                  </Button>\n\n\n                  <Button\n                    className=\"btn btn-outline mr-2\"\n                    onClick = {() => takedata(group.idd)}\n                  >\n                    Edit\n                  </Button>\n\n                  <Button\n                    className=\"btn btn-outline mr-2\"\n                    onClick = {() => takedepartment(group.idd)}\n                  >\n                    Move\n                  </Button>\n\n                  \n                \n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n\n\n\n    <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>ADD DEPARTMENT</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group >\n              <Form.Label>Department Name </Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Department Name\"  onChange = {(event) => { setNewdepartment(event.target.value)}}/>     \n\n              </Form.Group>\n\n            \n\n                <Form.Group>\n\n                <Form.Label>Where do you want to introduce this Department? </Form.Label>\n                <Form.Control as=\"select\" onChange = {(event) => { setPrimarydepartment(event.target.value)}} >\n                    <option></option>\n                {groups.map ((group) => (\n                    <option>{group.name}</option>\n                ))}\n                 </Form.Control>\n                \n                \n                </Form.Group>\n           \n         \n\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={addDepartment}>\n            Add Departments\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n\n      <Modal show={edit} onHide={editClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>EDIT DEPARTMENT</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        <Form.Group >\n              <Form.Label>Department Name </Form.Label>\n              <Form.Control type=\"text\" value = {name} onChange = {(event) => { setNewdepartment(event.target.value)}}/>     \n\n              </Form.Group>\n           \n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={editClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={editNamedepartment}>\n            Edit Department\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n\n      <Modal show={move} onHide={moveClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>MOVE DEPARTMENT</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n       \n              <Form.Group>\n\n                <Form.Label>Where do you want to move this Department? </Form.Label>\n                <Form.Control as=\"select\" defaultValue = {pdepartment} onChange = {(event) => {\n        \n                     setPrimarydepartment(event.target.value)}} >\n                    <option></option>\n                {groups.filter(group => group.idd != id).map(group => (\n                    <option>{group.name}</option>\n                ))}\n                 </Form.Control>\n                \n                \n                </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={moveClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={movedepartment}>\n            Move Department\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      <Modal show={save} onHide={saveClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>WARNING</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n       \n           Are you sure you want to move this group?\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={saveClose}>\n            NO\n          </Button>\n          <Button variant=\"primary\" onClick={movedepartmentfinal}>\n            YES\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n\n      <Modal show={details} onHide={detailsClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>DETAILS</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n                    <h4>Users in this Department: </h4>\n                    \n                    {users.filter(user=> user.department == name).map(user => (\n                        <p style = {{marginLeft: '10px', fontWeight:500, fontSize:'18px'}}>{user.lastName}    {user.firstName} </p>\n\n                  \n                ))}\n\n                <br></br>\n\n                    <h4>Departments inside: </h4>\n                    {groups.filter(group => group.pdepartment == name).map(group => (\n                      <p  style = {{marginLeft: '10px', fontWeight:500, fontSize:'18px'}} >{group.name}</p>\n                ))}\n                        \n\n                    \n\n        </Modal.Body>\n        <Modal.Footer>\n         \n          <Button variant=\"primary\" onClick = {detailsClose}>\n            OK\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n     <Modal show={showtree} onHide={treeClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Departments Tree</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n  \n\n        <div className=\"row\">\n        <div className=\"col text-center\">\n    \n          <p className=\"mt-3\">\n            <div className=\"row mt-3 d-flex justify-content-center\">\n              <div className=\"col-lg-8 text-left text-dark\">\n                <Tree data={treedata1} />\n              </div>\n            </div>\n          </p>\n        </div>\n      </div>\n         \n\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={treeClose}>\n            Close\n          </Button>\n          \n        </Modal.Footer>\n      </Modal>\n\n      \n\n   </div>\n  );\n};\n\nexport default Groups;","import React from \"react\";\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport Navbar from \"./components/Navbar\";\nimport Users from './components/Users';\nimport Groups from './components/Groups'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter\n} from \"react-router-dom\";\n\nfunction App() {\n  \n  return (\n    \n    \n    <Router>\n    \n    <div className=\"App\">\n      \n\n      <Switch>\n\n        <Route exact path=\"/\" component={Users} />\n        <Route exact path=\"/Departments\" component={Groups} />\n      \n      </Switch>\n    </div>\n  </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}